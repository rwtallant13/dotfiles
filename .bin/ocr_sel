#!/usr/bin/env bash


TEXT_FILE="/tmp/ocr.txt"
IMAGE_FILE="/tmp/ocr.png"

# Check if the needed dependencies are installed
dependencies=(tesseract maim xclip)
for dependency in "${dependencies[@]}"; do
    type -p "$dependency" &>/dev/null || {
        # Error notification
        notify-send "OCR Selection" "Could not find '${dependency}', is it installed?" &
        exit 1
    }
done

# Take screenshot by selecting the area
maim -u -s "$IMAGE_FILE"

# Get the exit code of the previous command.
STATUS=$?

# If the user pressed the escape key or did something to terminate the proccess
# taking a screenshot, then just exit
[ $STATUS -ne 0 ] && exit 1

# try to determine darkness:
is_dark () {
    # light pics have a gray colorspace > 0.50
    quantity=$(convert "$IMAGE_FILE" -colorspace gray -resize 1x1 -fx "debug(u)" null: 2>&1 | head -1| cut -d'=' -f2)
    if [[ $(echo "$quantity * 100 > 50" | bc -l) -eq 1 ]]; then
        # false
        return 1 >/dev/null
    else
        # true
        return 0
    fi
}

if is_dark; then
    convert "$IMAGE_FILE" -channel RGB -negate "$IMAGE_FILE"
fi

# Do the magic (∩^o^)⊃━☆ﾟ.*･｡ﾟ
2>/dev/null 1>&2 tesseract "$IMAGE_FILE" "${TEXT_FILE//\.txt/}"

# Check lines in the file
LINES=$(wc -l < $TEXT_FILE)
if [ "$LINES" -eq 0 ]; then
    notify-send "OCR Selection" "no text was detected" &
    exit 1
fi

# Copy text to clipboard
xclip -selection clip < "$TEXT_FILE"

# Send a notification with the text that was grabbed using OCR

ACTION=$(dunstify --action="replyAction,reply" "OCR Selection" "$(head -3 $TEXT_FILE)")

case "$ACTION" in
    "replyAction")
        /home/rob/.bin/nv "$TEXT_FILE" ;;
esac

# Clean up
rm "$TEXT_FILE"
rm "$IMAGE_FILE"
