#!/bin/bash

numSinks=$(pactl list short sinks| wc -l)


_nextSink() {
    oldSink=$(tail -1 "$sinkFile")
    nextSink=$(($oldSink + 1))
    if [[ nextSink -gt numSinks ]]; then
        nextSink=1
    fi
    newSink=$(head -1 "$sinkFile" | cut -d' ' -f"$nextSink")
    sed -i "2s/.*/$nextSink/" "$sinkFile"
}

_changeSink() {
    pacmd set-default-sink "$newSink"
}

_moveSinks() {
    pacmd list-sink-inputs | grep index | while read line
    do
    pacmd move-sink-input `echo "$line" | cut -f2 -d' '` "$newSink"
    done
}

_notify() {
    SINK="$(pacmd list-sinks | grep '*' -A60 | grep 'device.description' | cut -d '=' -f 2 | tr -d \")"
    VOL="$(pamixer --get-volume-human)"
	notify-send --hint=string:x-dunst-stack-tag:output -u normal "$SINK" "$VOL"
}

_default() {
	pamixer --default-source "$(pamixer --list-sources | grep hdmi | cut -d' ' -f1)"
	_moveSinks
	sleep 1s &&
    _notify
    exit 0
}

_mkfile(){
    rm -rf /tmp/current_sink*
    sinkFile="$(mktemp -t current_sink.XXXX)"
    echo $(pactl list short sinks | cut -f1) > "$sinkFile"
    echo 1 >> "$sinkFile"
}

_cycle(){
	sinkFile="$(find /tmp -name "current_sink"* 2>/dev/null)"
    if [[ -z $sinkFile ]]; then
        _mkfile
    fi

    _nextSink
    _changeSink
    _moveSinks
    _notify

}

_rename(){
    name="$(pacmd list-sinks | grep '*' -A60 | grep 'device.description' | cut -d ' ' -f 3 | tr -d \")"

    while true; do
        if [[ "$name" = "Speakers" || "$name" = "Headphones" || "$name" = "hdmi" ]]; then
            sleep 120
            echo "Sink names already set"
        else
            pacmd update-sink-proplist $(pactl list sinks short | rg hdmi | cut -f2) "device.description=hdmi"

            pacmd update-sink-proplist $(pactl list sinks short | rg usb | cut -f2) "device.description=Headphones"

            pacmd update-sink-proplist $(pactl list sinks short | grep -v hdmi | grep pci | cut -f2) "device.description=Speakers"

            sleep 120
        fi
    done
}


_help(){
    cat <<- EOF
Usage: sinkctl [OPT] (OPT)

Options:
    -d, default         select default sink
    -c, cycle           cycle through sinks
    -r, rename          rename sinks properly
    -R, reset           recreate sinks file to update sinks
    -v, vol             show volume notification

EOF
}

for arg in "$@"; do
    shift
    case "$arg" in
		-d|default)
			_default
			exit 0
			;;
		-R|reset)
			_mkfile
			;;
		-v|vol)
			_notify
			exit 0
			;;
		-r|rename)
			_rename &
			;;
		-c|cycle)
			_cycle
			;;
		*)
			_help
			;;
	esac
done
