set vicmd=nvim

" Start in single pane mode by default
only

" Use vifm perform file operations instead of standard utilities like `cp`.
set syscalls

" The default is to move files that are deleted with dd or :d to the trash
""set trash

" This is how many directories to store in the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" With this option turned on you can run partially entered commands
" set fastrun

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
set novimhelp

" Hide ../
set dotdirs=

" Selected color scheme
colorscheme Default

" Time Format
set timefmt=%m/%d\ %H:%M

" Custom column layout
windo set viewcolumns=-{name}..,10{size},15{atime}

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Hide side borders
set tuioptions-=s

" Ignore case in search patterns unless it contains at least one uppercase
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Set custom status line look
set statusline="%A %8u:%-7g %5E %15d "

" ------------------------------------------------------------------------------
" bookmarks
" :mark mark /full/directory/path [filename]
mark h ~/


" What should be saved automatically between vifm sessions.
set vifminfo=dhistory,chistory,state,tui,shistory,phistory,dirstack,registers,bookmarks,bmarks

" my basic mappings
let mapleader =","
nnoremap <c-f> :fzf<cr>
nmap q ZZ
nmap ; :
nmap R :restart<cr>
nmap . za
map <delete> DD
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <C-o> <C-w>o
map <C-s> <C-w>s
map <C-v> <C-w>v
nnoremap T :!nout thunar <cr>
nnoremap ! :shell<cr>
nnoremap s :sort<cr>
nnoremap w :view<cr>
vnoremap w :view<cr>gv
nnoremap o :file &<cr>l
cnoremap ndu !nnn -S<cr>
map ,f :filter
map SS :invert o <cr>
nnoremap <C-a> :norm ggVG<cr><cr>
qnoremap <s-tab> :norm gt
" substitute in all files
nnoremap ca :%s/
nnoremap J :jobs<cr>
nnoremap P :put! &<cr>
nnoremap H :history <cr>

" toggle between sorting: by name <--> by size <--> by mtime
command! togglesort
         \ :if &sort == '-size,+name'
         \ |    set sort=+mtime
         \ |    echo 'Sorted by modification date'
         \ |elseif &sort == '+name'
         \ |    set sort=-size
         \ |    echo 'Sorted by size'
         \ |else
         \ |    set sort=+name
         \ |    echo 'Sorted by name'
         \ |endif
nnoremap SA :togglesort<cr>

" yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" yank current file path into the clipboard
nnoremap yp :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

" yank current filename without path into the clipboard
nnoremap yn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

" yank root of current file's name into the clipboard
nnoremap yr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

command! FZFcd :set noquickview | :execute 'goto' fnameescape(term('fd . $HOME -H -a -t d -t l | fzf --height 10 --layout=default 2>/dev/tty'))
command! FZFfind :set noquickview | :execute 'goto' fnameescape(term('fd . $HOME -H -a | fzf  --height 10 --layout=default 2>/dev/tty'))

nnoremap <c-f> :FZFcd<cr>
nnoremap <c-g> :FZFfind<cr>

command! FZFjump :set noquickview | :execute 'goto' fnameescape(term('zsh -ic "_zlua -I -t ." 2>/dev/tty'))

nnoremap <c-j> :FZFjump<cr>

" Mappings for faster renaming
nnoremap <f2> cw
nnoremap cc cw<c-u>

" Open terminal in current directory
nnoremap $ :!$TERMINAL %i &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Open in pager
nnoremap ,p :!less %f<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" Use rg instead of grep
set grepprg='rg %i %a %s'


" ------------------------------------------------------------------------------
" File Defaults

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart
command! fzf :set noquickview | :execute 'goto' fnameescape(term('fd . -H | fzf 2>/dev/tty'))

" Open all other defaults
filetype * xdg-open
