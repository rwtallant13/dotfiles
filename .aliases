#
# ~/.aliases
#


# system
alias dots-tracked='yadm list -a|less'
alias dots='yadm'
alias services='systemctl list-unit-files | grep enabled'
alias grep='grep --color=auto'
alias J='sudo journalctl'
alias myip='curl http://ipecho.net/plain; echo'
alias S='sudo systemctl'
alias s='systemctl --user'
alias sudo='sudo '
alias ufw='sudo ufw'
alias sufw='sudo ufw'
alias su='sudo -i'
alias timers='systemctl list-timers'
alias udb='sudo updatedb'
alias udev-reload='sudo udevadm control --reload-rules && sudo udevadm trigger'


# pacman
alias fzpacr='sudo pacman -Rncs $(fzpkgs)'
alias pacdiff='sudo -E pacdiff'
alias pacf='sudo pacman -F'
alias pacl='sudo pacman -Ql'
alias pacq='sudo pacman -Qs'
alias pacrepo='sudo reflector --latest 25 --protocol https --sort age --save /etc/pacman.d/mirrorlist && sudo pacman -Syy'
alias pacr='SNAP_PAC_SKIP=y pacman -Rncs'
alias pacs='sudo pacman -Ss'
alias pac='sudo SNAP_PAC_SKIP=y pacman -S'
alias paru='SNAP_PAC_SKIP=y paru'
alias pacu='sudo pacman -Syu'
alias pacdiff='sudo pacdiff'
alias rmorphans='sudo pacman -Rns $(pacman -Qtdq)'

#ls
alias l='exa --group-directories-first'
alias la='exa -a --group-directories-first'
alias lla='exa -la --group --grid --group-directories-first'
alias ll='exa -l --group --grid --group-directories-first'
alias ls='exa --group-directories-first'
alias lr='exa -T --level=3 --color always| less -R'
alias lb='EXA_GRID_ROWS=2 exa -la --grid --no-time /home/rob/bin/'

#commands
alias cpuspeed='watch -n.1 "cat /proc/cpuinfo | grep \"^[c]pu MHz\""'
alias fdh='fd --hidden'
alias fzsys='fuzzy-sys'
alias df='df -h'
alias gcp='g++'
alias hb='HandBrakeCLI'
alias m='micro'
alias mv='mv -iv'
alias pb='curl -F "f:1=<-" ix.io'
alias rf='rg --files --hidden'
alias rm='rm -I'
alias rmr='rm -rfI'
alias tb='nc termbin.com 9999'
alias vfb='vifm /drives/blueberry/backups/rob-pc /home/rob'
alias vfm='vifm /drives/blueberry/ /home/rob/downloads/torrents/ '
alias vf='vifm'
alias v='/home/rob/bin/nv'
alias xc='xclip -selection clipboard'


# bb/pi
alias bb='ssh -X bb'
alias pilog='ssh -t pi pihole -t'
alias mcctrl='ssh -t bb /home/rob/bin/mcctrl'

mclog () {
	if [ $1 == '-a' ]
	then
		ssh bb journalctl -r -u minecraft@vanilla.service|less
	else
		ssh bb journalctl -f -u minecraft@vanilla.service
	fi
}

#
# functions
#

f() {
    sels=( "${(@f)$(fd "${fd_default[@]}" "${@:2}"| fzf)}" )
    test -n "$sels" && print -z -- "$1 ${sels[@]:q:q}"
}


rmspaces(){
	IFS="\n"
	for file in *;
	do
    	mv "$file" "${file//[[:space:]]}"
	done

}

pacman-pkgs(){
	pacman -Qqne | tee /home/rob/docs/pacman-pkgs
}

aur-pkgs(){
	pacman -Qqme | tee /home/rob/docs/aur-pkgs
}

fzfpac(){
	local pkg="$(pacman -Slq | fzf --preview 'pacman -Si {}' --layout=reverse)"
	test $pkg || return 1
	sudo pacman -Syu $pkg
}

mkbackup(){
	cp -b ${1} ${1}.bak
}

pkglist(){
	pacman -Qqme > /home/rob/docs/aur-pkgs
	pacman -Qqne > /home/rob/docs/pacman-pkgs
	pacman -Qqe | less
}

fzpkgs(){
    pacman -Qqe | fzf --height=100% --preview 'pacman -Qi {}' --layout=reverse
}

mkcd(){
	mkdir -p "$1" && cd "$1"
}

mkbin(){
	if [[ -n "$1" ]]; then
		local p=/home/rob/bin/${1##*/}
		if [[ -f "$p" ]]; then
			nvim "$p"
			exit 0
		else
			printf '#!/bin/bash\n\n' > "$p" && chmod +x "$p" && nv "$p" "+3"
		fi
	else
		(cd /home/rob/bin && nv)
	fi

}

cdsnap(){
	case "${1:-"home"}" in

		-l)
			if [[ -z $2 ]] ||  [[ $2 = "home" ]] ; then
				local snapdir="/home/.snapshots"
				local dir="rob"
				local snapnum="$(/bin/ls -t $snapdir | head -n1)"

			elif [[ $2 = "root" ]]; then
				local snapdir="/.snapshots"
				local snapnum="$(/bin/ls -t $snapdir | head -n1)"

			fi
			;;
		root)
			local snapdir="/.snapshots"
			local prompt="root snap >"
			local snapnum="$(/bin/ls -t $snapdir | fzf --prompt=$prompt )"
			;;
		home)
			local snapdir="/home/.snapshots"
			local dir="rob"
			local prompt="home snap >"
			local snapnum="$(/bin/ls -t $snapdir | fzf --prompt=$prompt )"
			;;

	esac

	[[ $snapnum ]] || return
	cd "$snapdir"/"$snapnum"/snapshot/"${dir:-}" && pwd

}

chx(){
    chmod +x $*
}

vw(){
	viewnior $*
}

se(){
	if [[ $1 ]]; then
		local dir=${@}
	else
		if [[ "$(pwd)" == "$(echo $HOME)" ]]; then
			local dir=(./)
		else
			local dir=($HOME ./)
		fi
	fi

    local sel="$(fd . -H $dir[@]| fzf)"
    if [[ -d "$sel" ]] ; then
        cd "$sel"
    elif [[ -f "$sel" ]]; then
		echo "$sel"
        /home/rob/bin/nv "$sel"
    fi
}

swap(){
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}

open(){
    nohup xdg-open "$@" >/dev/null 2>&1 & disown
}

watchproc(){
    local pid

    pid=$(ps -e -o pid,user,cmd | sed 1d | fzf -m | awk '{print $1}')

    if [ "x$pid" != "x" ]
    then
        ps -p "$pid" -o etime,command
    fi
}

yf(){
    if [[ $1 ]]; then
        cat "$1" | xclip -selection clipboard
    else
        echo 'file required'
        exit 0
    fi

}

hist_dedup() {

    tac ~/.config/bash_history | awk '! x[$0]++' | tac > ~/bash_hist_clean

    mv ~/.config/bash_history ~/.config/bash_history_old

    mv ~/bash_hist_clean ~/.config/bash_history

}

fkill() {
    local pid

    pid=$(ps -eo user,pid,etime,cmd | sed 1d | fzf -m | awk '{print $2}')

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs sudo kill -${1:-9}
    fi
}

fzaux() {
    local pid
    if [ "$UID" != "0" ]; then
        ps -f -u $UID | sed 1d | fzf -m
    else
        ps -ef | sed 1d | fzf -m
    fi
}

fdchars() {
    fd -H $* | grep -E '\s|\*|\?|\$|%|'\ ''

}
